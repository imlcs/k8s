RESTful：
	- GET，PUT，DELETE，POST...
	- kubectl run，get，edit，...

资源：对象
	- workload：Pod，ReplicaSet，Deployment，StatefulSet，DaemonSet，Job，Cronjob
	- 服务发现及服务均衡：Service，Ingress
	- 配置与存储：Volume，CSI
		- ConfigMap，Secret
		- DownwardAPI
	- 集群及资源
		- Namespace，Node，Role，ClusterRole，ClusterRoleBinding
	- 元数据型资源
		- HPA，PodTemplate，LimitRange

创建资源的方法：
	apiserver仅接收JSON格式的资源定义
	yaml格式提供配置清单，apiserverek自动将其转为json格式，然后再执行

大部分资源的配置清单
	apiversion: group/version 
    kubetcl api-versions
	
	kind: 资源类别
	
	metadata: 元数据
		name：
		namespace：
		labels:
		annotations:
		每个资源的引用path
			/api/GROUP/VERSION/namespaces/NAMESPACE/TYPE/NAME
	
	spec: 期望的状态，disired state
	
	status: 当前的状态， currnt state， 本字段由 kubernetes 集群维护，用户不能修改
	
	https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/
	
	标签：
		key=value
			key：数字，字母，"-"，"_"，"."
			value: 可以为空，只能以数字字母开头及结尾 
		# 对 pod pod-demo 添加标签
		kubectl label pods pod-demo release=canary 
		# 覆盖容器的标签
		kubectl label pods pod-demo release=stable --overwrite
	标签选择器：
		等值关系：
			kubectl get pods -l release=canary,app=myapp
		集合关系：
			kubectl get pods -l "release in (test,stable)"
			key in (value1,value2...)
			key notin(value1,value2...)
	
	nodeSelector：节点标签选择器 
	nodeName：节点选择器
	annotations：资源注解
	
	pod 的生命周期
		状态： Pending，Running，Failed，Succeeded，Unknown
		
		创建Pod：
		Pod 生命周期中的重要行为：
			初始化容器
			容器探测：
				liveness
				readiness
		restartPolicy：
			Always，OnFailure，Never		default of Always
